// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class BreakGlassGuardianChanged extends ethereum.Event {
  get params(): BreakGlassGuardianChanged__Params {
    return new BreakGlassGuardianChanged__Params(this);
  }
}

export class BreakGlassGuardianChanged__Params {
  _event: BreakGlassGuardianChanged;

  constructor(event: BreakGlassGuardianChanged) {
    this._event = event;
  }

  get oldValue(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newValue(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class GovernanceReturnAddressChanged extends ethereum.Event {
  get params(): GovernanceReturnAddressChanged__Params {
    return new GovernanceReturnAddressChanged__Params(this);
  }
}

export class GovernanceReturnAddressChanged__Params {
  _event: GovernanceReturnAddressChanged;

  constructor(event: GovernanceReturnAddressChanged) {
    this._event = event;
  }

  get oldValue(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newValue(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class LowerQuorumCapChanged extends ethereum.Event {
  get params(): LowerQuorumCapChanged__Params {
    return new LowerQuorumCapChanged__Params(this);
  }
}

export class LowerQuorumCapChanged__Params {
  _event: LowerQuorumCapChanged;

  constructor(event: LowerQuorumCapChanged) {
    this._event = event;
  }

  get oldValue(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get newValue(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class ProposalCanceled extends ethereum.Event {
  get params(): ProposalCanceled__Params {
    return new ProposalCanceled__Params(this);
  }
}

export class ProposalCanceled__Params {
  _event: ProposalCanceled;

  constructor(event: ProposalCanceled) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class ProposalCreated extends ethereum.Event {
  get params(): ProposalCreated__Params {
    return new ProposalCreated__Params(this);
  }
}

export class ProposalCreated__Params {
  _event: ProposalCreated;

  constructor(event: ProposalCreated) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get proposer(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get targets(): Array<Address> {
    return this._event.parameters[2].value.toAddressArray();
  }

  get values(): Array<BigInt> {
    return this._event.parameters[3].value.toBigIntArray();
  }

  get signatures(): Array<string> {
    return this._event.parameters[4].value.toStringArray();
  }

  get calldatas(): Array<Bytes> {
    return this._event.parameters[5].value.toBytesArray();
  }

  get startTimestamp(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get endTimestamp(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }

  get description(): string {
    return this._event.parameters[8].value.toString();
  }

  get quorum(): BigInt {
    return this._event.parameters[9].value.toBigInt();
  }
}

export class ProposalExecuted extends ethereum.Event {
  get params(): ProposalExecuted__Params {
    return new ProposalExecuted__Params(this);
  }
}

export class ProposalExecuted__Params {
  _event: ProposalExecuted;

  constructor(event: ProposalExecuted) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class ProposalMaxOperationsChanged extends ethereum.Event {
  get params(): ProposalMaxOperationsChanged__Params {
    return new ProposalMaxOperationsChanged__Params(this);
  }
}

export class ProposalMaxOperationsChanged__Params {
  _event: ProposalMaxOperationsChanged;

  constructor(event: ProposalMaxOperationsChanged) {
    this._event = event;
  }

  get oldValue(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get newValue(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class ProposalQueued extends ethereum.Event {
  get params(): ProposalQueued__Params {
    return new ProposalQueued__Params(this);
  }
}

export class ProposalQueued__Params {
  _event: ProposalQueued;

  constructor(event: ProposalQueued) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get eta(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class ProposalThresholdChanged extends ethereum.Event {
  get params(): ProposalThresholdChanged__Params {
    return new ProposalThresholdChanged__Params(this);
  }
}

export class ProposalThresholdChanged__Params {
  _event: ProposalThresholdChanged;

  constructor(event: ProposalThresholdChanged) {
    this._event = event;
  }

  get oldValue(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get newValue(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class QuroumVotesChanged extends ethereum.Event {
  get params(): QuroumVotesChanged__Params {
    return new QuroumVotesChanged__Params(this);
  }
}

export class QuroumVotesChanged__Params {
  _event: QuroumVotesChanged;

  constructor(event: QuroumVotesChanged) {
    this._event = event;
  }

  get oldValue(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get newValue(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class StartBlockSet extends ethereum.Event {
  get params(): StartBlockSet__Params {
    return new StartBlockSet__Params(this);
  }
}

export class StartBlockSet__Params {
  _event: StartBlockSet;

  constructor(event: StartBlockSet) {
    this._event = event;
  }

  get proposalId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get startBlock(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class UpperQuorumCapChanged extends ethereum.Event {
  get params(): UpperQuorumCapChanged__Params {
    return new UpperQuorumCapChanged__Params(this);
  }
}

export class UpperQuorumCapChanged__Params {
  _event: UpperQuorumCapChanged;

  constructor(event: UpperQuorumCapChanged) {
    this._event = event;
  }

  get oldValue(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get newValue(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class VoteCast extends ethereum.Event {
  get params(): VoteCast__Params {
    return new VoteCast__Params(this);
  }
}

export class VoteCast__Params {
  _event: VoteCast;

  constructor(event: VoteCast) {
    this._event = event;
  }

  get voter(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get proposalId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get voteValue(): i32 {
    return this._event.parameters[2].value.toI32();
  }

  get votes(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class VotingDelayChanged extends ethereum.Event {
  get params(): VotingDelayChanged__Params {
    return new VotingDelayChanged__Params(this);
  }
}

export class VotingDelayChanged__Params {
  _event: VotingDelayChanged;

  constructor(event: VotingDelayChanged) {
    this._event = event;
  }

  get oldValue(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get newValue(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class GovernorBravo__getActionsResult {
  value0: Array<Address>;
  value1: Array<BigInt>;
  value2: Array<string>;
  value3: Array<Bytes>;

  constructor(
    value0: Array<Address>,
    value1: Array<BigInt>,
    value2: Array<string>,
    value3: Array<Bytes>
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddressArray(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigIntArray(this.value1));
    map.set("value2", ethereum.Value.fromStringArray(this.value2));
    map.set("value3", ethereum.Value.fromBytesArray(this.value3));
    return map;
  }

  getTargets(): Array<Address> {
    return this.value0;
  }

  getValues(): Array<BigInt> {
    return this.value1;
  }

  getSignatures(): Array<string> {
    return this.value2;
  }

  getCalldatas(): Array<Bytes> {
    return this.value3;
  }
}

export class GovernorBravo__getReceiptResultValue0Struct extends ethereum.Tuple {
  get hasVoted(): boolean {
    return this[0].toBoolean();
  }

  get voteValue(): i32 {
    return this[1].toI32();
  }

  get votes(): BigInt {
    return this[2].toBigInt();
  }
}

export class GovernorBravo__proposalsResult {
  value0: BigInt;
  value1: Address;
  value2: BigInt;
  value3: BigInt;
  value4: BigInt;
  value5: BigInt;
  value6: BigInt;
  value7: BigInt;
  value8: BigInt;
  value9: BigInt;
  value10: boolean;
  value11: boolean;
  value12: BigInt;

  constructor(
    value0: BigInt,
    value1: Address,
    value2: BigInt,
    value3: BigInt,
    value4: BigInt,
    value5: BigInt,
    value6: BigInt,
    value7: BigInt,
    value8: BigInt,
    value9: BigInt,
    value10: boolean,
    value11: boolean,
    value12: BigInt
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
    this.value7 = value7;
    this.value8 = value8;
    this.value9 = value9;
    this.value10 = value10;
    this.value11 = value11;
    this.value12 = value12;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    map.set("value6", ethereum.Value.fromUnsignedBigInt(this.value6));
    map.set("value7", ethereum.Value.fromUnsignedBigInt(this.value7));
    map.set("value8", ethereum.Value.fromUnsignedBigInt(this.value8));
    map.set("value9", ethereum.Value.fromUnsignedBigInt(this.value9));
    map.set("value10", ethereum.Value.fromBoolean(this.value10));
    map.set("value11", ethereum.Value.fromBoolean(this.value11));
    map.set("value12", ethereum.Value.fromUnsignedBigInt(this.value12));
    return map;
  }

  getId(): BigInt {
    return this.value0;
  }

  getProposer(): Address {
    return this.value1;
  }

  getEta(): BigInt {
    return this.value2;
  }

  getStartTimestamp(): BigInt {
    return this.value3;
  }

  getEndTimestamp(): BigInt {
    return this.value4;
  }

  getStartBlock(): BigInt {
    return this.value5;
  }

  getForVotes(): BigInt {
    return this.value6;
  }

  getAgainstVotes(): BigInt {
    return this.value7;
  }

  getAbstainVotes(): BigInt {
    return this.value8;
  }

  getTotalVotes(): BigInt {
    return this.value9;
  }

  getCanceled(): boolean {
    return this.value10;
  }

  getExecuted(): boolean {
    return this.value11;
  }

  getQuorum(): BigInt {
    return this.value12;
  }
}

export class GovernorBravo extends ethereum.SmartContract {
  static bind(address: Address): GovernorBravo {
    return new GovernorBravo("GovernorBravo", address);
  }

  BALLOT_TYPEHASH(): Bytes {
    let result = super.call(
      "BALLOT_TYPEHASH",
      "BALLOT_TYPEHASH():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_BALLOT_TYPEHASH(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "BALLOT_TYPEHASH",
      "BALLOT_TYPEHASH():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  DOMAIN_TYPEHASH(): Bytes {
    let result = super.call(
      "DOMAIN_TYPEHASH",
      "DOMAIN_TYPEHASH():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_DOMAIN_TYPEHASH(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "DOMAIN_TYPEHASH",
      "DOMAIN_TYPEHASH():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  breakGlassGuardian(): Address {
    let result = super.call(
      "breakGlassGuardian",
      "breakGlassGuardian():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_breakGlassGuardian(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "breakGlassGuardian",
      "breakGlassGuardian():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  currentQuorum(): BigInt {
    let result = super.call("currentQuorum", "currentQuorum():(uint256)", []);

    return result[0].toBigInt();
  }

  try_currentQuorum(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "currentQuorum",
      "currentQuorum():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  fastTrackFunctionSignatureWhitelist(param0: string): boolean {
    let result = super.call(
      "fastTrackFunctionSignatureWhitelist",
      "fastTrackFunctionSignatureWhitelist(string):(bool)",
      [ethereum.Value.fromString(param0)]
    );

    return result[0].toBoolean();
  }

  try_fastTrackFunctionSignatureWhitelist(
    param0: string
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "fastTrackFunctionSignatureWhitelist",
      "fastTrackFunctionSignatureWhitelist(string):(bool)",
      [ethereum.Value.fromString(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  fastTrackTimelock(): BigInt {
    let result = super.call(
      "fastTrackTimelock",
      "fastTrackTimelock():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_fastTrackTimelock(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "fastTrackTimelock",
      "fastTrackTimelock():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  fasterVotingPeriod(): BigInt {
    let result = super.call(
      "fasterVotingPeriod",
      "fasterVotingPeriod():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_fasterVotingPeriod(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "fasterVotingPeriod",
      "fasterVotingPeriod():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getActions(proposalId: BigInt): GovernorBravo__getActionsResult {
    let result = super.call(
      "getActions",
      "getActions(uint256):(address[],uint256[],string[],bytes[])",
      [ethereum.Value.fromUnsignedBigInt(proposalId)]
    );

    return new GovernorBravo__getActionsResult(
      result[0].toAddressArray(),
      result[1].toBigIntArray(),
      result[2].toStringArray(),
      result[3].toBytesArray()
    );
  }

  try_getActions(
    proposalId: BigInt
  ): ethereum.CallResult<GovernorBravo__getActionsResult> {
    let result = super.tryCall(
      "getActions",
      "getActions(uint256):(address[],uint256[],string[],bytes[])",
      [ethereum.Value.fromUnsignedBigInt(proposalId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new GovernorBravo__getActionsResult(
        value[0].toAddressArray(),
        value[1].toBigIntArray(),
        value[2].toStringArray(),
        value[3].toBytesArray()
      )
    );
  }

  getQuorum(): BigInt {
    let result = super.call("getQuorum", "getQuorum():(uint256)", []);

    return result[0].toBigInt();
  }

  try_getQuorum(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("getQuorum", "getQuorum():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getReceipt(
    proposalId: BigInt,
    voter: Address
  ): GovernorBravo__getReceiptResultValue0Struct {
    let result = super.call(
      "getReceipt",
      "getReceipt(uint256,address):((bool,uint8,uint256))",
      [
        ethereum.Value.fromUnsignedBigInt(proposalId),
        ethereum.Value.fromAddress(voter)
      ]
    );

    return changetype<GovernorBravo__getReceiptResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_getReceipt(
    proposalId: BigInt,
    voter: Address
  ): ethereum.CallResult<GovernorBravo__getReceiptResultValue0Struct> {
    let result = super.tryCall(
      "getReceipt",
      "getReceipt(uint256,address):((bool,uint8,uint256))",
      [
        ethereum.Value.fromUnsignedBigInt(proposalId),
        ethereum.Value.fromAddress(voter)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<GovernorBravo__getReceiptResultValue0Struct>(
        value[0].toTuple()
      )
    );
  }

  govToken(): Address {
    let result = super.call("govToken", "govToken():(address)", []);

    return result[0].toAddress();
  }

  try_govToken(): ethereum.CallResult<Address> {
    let result = super.tryCall("govToken", "govToken():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  govTokenVestingContract(): Address {
    let result = super.call(
      "govTokenVestingContract",
      "govTokenVestingContract():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_govTokenVestingContract(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "govTokenVestingContract",
      "govTokenVestingContract():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  governanceReturnAddress(): Address {
    let result = super.call(
      "governanceReturnAddress",
      "governanceReturnAddress():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_governanceReturnAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "governanceReturnAddress",
      "governanceReturnAddress():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  governanceReturnGuardian(): Address {
    let result = super.call(
      "governanceReturnGuardian",
      "governanceReturnGuardian():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_governanceReturnGuardian(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "governanceReturnGuardian",
      "governanceReturnGuardian():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  guardianSunset(): BigInt {
    let result = super.call("guardianSunset", "guardianSunset():(uint256)", []);

    return result[0].toBigInt();
  }

  try_guardianSunset(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "guardianSunset",
      "guardianSunset():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  latestProposalIds(param0: Address): BigInt {
    let result = super.call(
      "latestProposalIds",
      "latestProposalIds(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toBigInt();
  }

  try_latestProposalIds(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "latestProposalIds",
      "latestProposalIds(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  name(): string {
    let result = super.call("name", "name():(string)", []);

    return result[0].toString();
  }

  try_name(): ethereum.CallResult<string> {
    let result = super.tryCall("name", "name():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  normalTimelock(): BigInt {
    let result = super.call("normalTimelock", "normalTimelock():(uint256)", []);

    return result[0].toBigInt();
  }

  try_normalTimelock(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "normalTimelock",
      "normalTimelock():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  normalVotingPeriod(): BigInt {
    let result = super.call(
      "normalVotingPeriod",
      "normalVotingPeriod():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_normalVotingPeriod(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "normalVotingPeriod",
      "normalVotingPeriod():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  proposalCount(): BigInt {
    let result = super.call("proposalCount", "proposalCount():(uint256)", []);

    return result[0].toBigInt();
  }

  try_proposalCount(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "proposalCount",
      "proposalCount():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  proposalMaxOperations(): BigInt {
    let result = super.call(
      "proposalMaxOperations",
      "proposalMaxOperations():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_proposalMaxOperations(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "proposalMaxOperations",
      "proposalMaxOperations():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  proposalThreshold(): BigInt {
    let result = super.call(
      "proposalThreshold",
      "proposalThreshold():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_proposalThreshold(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "proposalThreshold",
      "proposalThreshold():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  proposals(param0: BigInt): GovernorBravo__proposalsResult {
    let result = super.call(
      "proposals",
      "proposals(uint256):(uint256,address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,bool,bool,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new GovernorBravo__proposalsResult(
      result[0].toBigInt(),
      result[1].toAddress(),
      result[2].toBigInt(),
      result[3].toBigInt(),
      result[4].toBigInt(),
      result[5].toBigInt(),
      result[6].toBigInt(),
      result[7].toBigInt(),
      result[8].toBigInt(),
      result[9].toBigInt(),
      result[10].toBoolean(),
      result[11].toBoolean(),
      result[12].toBigInt()
    );
  }

  try_proposals(
    param0: BigInt
  ): ethereum.CallResult<GovernorBravo__proposalsResult> {
    let result = super.tryCall(
      "proposals",
      "proposals(uint256):(uint256,address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,bool,bool,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new GovernorBravo__proposalsResult(
        value[0].toBigInt(),
        value[1].toAddress(),
        value[2].toBigInt(),
        value[3].toBigInt(),
        value[4].toBigInt(),
        value[5].toBigInt(),
        value[6].toBigInt(),
        value[7].toBigInt(),
        value[8].toBigInt(),
        value[9].toBigInt(),
        value[10].toBoolean(),
        value[11].toBoolean(),
        value[12].toBigInt()
      )
    );
  }

  propose(
    targets: Array<Address>,
    values: Array<BigInt>,
    signatures: Array<string>,
    calldatas: Array<Bytes>,
    description: string,
    fastTrack: boolean
  ): BigInt {
    let result = super.call(
      "propose",
      "propose(address[],uint256[],string[],bytes[],string,bool):(uint256)",
      [
        ethereum.Value.fromAddressArray(targets),
        ethereum.Value.fromUnsignedBigIntArray(values),
        ethereum.Value.fromStringArray(signatures),
        ethereum.Value.fromBytesArray(calldatas),
        ethereum.Value.fromString(description),
        ethereum.Value.fromBoolean(fastTrack)
      ]
    );

    return result[0].toBigInt();
  }

  try_propose(
    targets: Array<Address>,
    values: Array<BigInt>,
    signatures: Array<string>,
    calldatas: Array<Bytes>,
    description: string,
    fastTrack: boolean
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "propose",
      "propose(address[],uint256[],string[],bytes[],string,bool):(uint256)",
      [
        ethereum.Value.fromAddressArray(targets),
        ethereum.Value.fromUnsignedBigIntArray(values),
        ethereum.Value.fromStringArray(signatures),
        ethereum.Value.fromBytesArray(calldatas),
        ethereum.Value.fromString(description),
        ethereum.Value.fromBoolean(fastTrack)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  revenueProposalList(param0: Address): boolean {
    let result = super.call(
      "revenueProposalList",
      "revenueProposalList(address):(bool)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toBoolean();
  }

  try_revenueProposalList(param0: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "revenueProposalList",
      "revenueProposalList(address):(bool)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  revenueTimelock(): BigInt {
    let result = super.call(
      "revenueTimelock",
      "revenueTimelock():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_revenueTimelock(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "revenueTimelock",
      "revenueTimelock():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  revenueVotingPeriod(): BigInt {
    let result = super.call(
      "revenueVotingPeriod",
      "revenueVotingPeriod():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_revenueVotingPeriod(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "revenueVotingPeriod",
      "revenueVotingPeriod():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  stakedGovToken(): Address {
    let result = super.call("stakedGovToken", "stakedGovToken():(address)", []);

    return result[0].toAddress();
  }

  try_stakedGovToken(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "stakedGovToken",
      "stakedGovToken():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  state(proposalId: BigInt): i32 {
    let result = super.call("state", "state(uint256):(uint8)", [
      ethereum.Value.fromUnsignedBigInt(proposalId)
    ]);

    return result[0].toI32();
  }

  try_state(proposalId: BigInt): ethereum.CallResult<i32> {
    let result = super.tryCall("state", "state(uint256):(uint8)", [
      ethereum.Value.fromUnsignedBigInt(proposalId)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  timelock(): Address {
    let result = super.call("timelock", "timelock():(address)", []);

    return result[0].toAddress();
  }

  try_timelock(): ethereum.CallResult<Address> {
    let result = super.tryCall("timelock", "timelock():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  voteValueAbstain(): i32 {
    let result = super.call(
      "voteValueAbstain",
      "voteValueAbstain():(uint8)",
      []
    );

    return result[0].toI32();
  }

  try_voteValueAbstain(): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "voteValueAbstain",
      "voteValueAbstain():(uint8)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  voteValueNo(): i32 {
    let result = super.call("voteValueNo", "voteValueNo():(uint8)", []);

    return result[0].toI32();
  }

  try_voteValueNo(): ethereum.CallResult<i32> {
    let result = super.tryCall("voteValueNo", "voteValueNo():(uint8)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  voteValueYes(): i32 {
    let result = super.call("voteValueYes", "voteValueYes():(uint8)", []);

    return result[0].toI32();
  }

  try_voteValueYes(): ethereum.CallResult<i32> {
    let result = super.tryCall("voteValueYes", "voteValueYes():(uint8)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  votingDelay(): BigInt {
    let result = super.call("votingDelay", "votingDelay():(uint256)", []);

    return result[0].toBigInt();
  }

  try_votingDelay(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("votingDelay", "votingDelay():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get timelock_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get govToken_(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get stakedGovToken_(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get govTokenVestingContract_(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get breakGlassGuardian_(): Address {
    return this._call.inputValues[4].value.toAddress();
  }

  get governanceReturnAddress_(): Address {
    return this._call.inputValues[5].value.toAddress();
  }

  get governanceReturnGuardian_(): Address {
    return this._call.inputValues[6].value.toAddress();
  }

  get guardianSunset_(): BigInt {
    return this._call.inputValues[7].value.toBigInt();
  }

  get currentQuorum_(): BigInt {
    return this._call.inputValues[8].value.toBigInt();
  }

  get proposalThreshold_(): BigInt {
    return this._call.inputValues[9].value.toBigInt();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class __acceptAdminOnTimelockCall extends ethereum.Call {
  get inputs(): __acceptAdminOnTimelockCall__Inputs {
    return new __acceptAdminOnTimelockCall__Inputs(this);
  }

  get outputs(): __acceptAdminOnTimelockCall__Outputs {
    return new __acceptAdminOnTimelockCall__Outputs(this);
  }
}

export class __acceptAdminOnTimelockCall__Inputs {
  _call: __acceptAdminOnTimelockCall;

  constructor(call: __acceptAdminOnTimelockCall) {
    this._call = call;
  }
}

export class __acceptAdminOnTimelockCall__Outputs {
  _call: __acceptAdminOnTimelockCall;

  constructor(call: __acceptAdminOnTimelockCall) {
    this._call = call;
  }
}

export class __cancelProposalBreakGlassCall extends ethereum.Call {
  get inputs(): __cancelProposalBreakGlassCall__Inputs {
    return new __cancelProposalBreakGlassCall__Inputs(this);
  }

  get outputs(): __cancelProposalBreakGlassCall__Outputs {
    return new __cancelProposalBreakGlassCall__Outputs(this);
  }
}

export class __cancelProposalBreakGlassCall__Inputs {
  _call: __cancelProposalBreakGlassCall;

  constructor(call: __cancelProposalBreakGlassCall) {
    this._call = call;
  }

  get proposalId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class __cancelProposalBreakGlassCall__Outputs {
  _call: __cancelProposalBreakGlassCall;

  constructor(call: __cancelProposalBreakGlassCall) {
    this._call = call;
  }
}

export class __executeAcceptAdminOnContractCall extends ethereum.Call {
  get inputs(): __executeAcceptAdminOnContractCall__Inputs {
    return new __executeAcceptAdminOnContractCall__Inputs(this);
  }

  get outputs(): __executeAcceptAdminOnContractCall__Outputs {
    return new __executeAcceptAdminOnContractCall__Outputs(this);
  }
}

export class __executeAcceptAdminOnContractCall__Inputs {
  _call: __executeAcceptAdminOnContractCall;

  constructor(call: __executeAcceptAdminOnContractCall) {
    this._call = call;
  }

  get addresses(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }
}

export class __executeAcceptAdminOnContractCall__Outputs {
  _call: __executeAcceptAdminOnContractCall;

  constructor(call: __executeAcceptAdminOnContractCall) {
    this._call = call;
  }
}

export class __executeBreakGlassOnChangeAdminCall extends ethereum.Call {
  get inputs(): __executeBreakGlassOnChangeAdminCall__Inputs {
    return new __executeBreakGlassOnChangeAdminCall__Inputs(this);
  }

  get outputs(): __executeBreakGlassOnChangeAdminCall__Outputs {
    return new __executeBreakGlassOnChangeAdminCall__Outputs(this);
  }
}

export class __executeBreakGlassOnChangeAdminCall__Inputs {
  _call: __executeBreakGlassOnChangeAdminCall;

  constructor(call: __executeBreakGlassOnChangeAdminCall) {
    this._call = call;
  }

  get addresses(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }
}

export class __executeBreakGlassOnChangeAdminCall__Outputs {
  _call: __executeBreakGlassOnChangeAdminCall;

  constructor(call: __executeBreakGlassOnChangeAdminCall) {
    this._call = call;
  }
}

export class __executeBreakGlassOnCompoundCall extends ethereum.Call {
  get inputs(): __executeBreakGlassOnCompoundCall__Inputs {
    return new __executeBreakGlassOnCompoundCall__Inputs(this);
  }

  get outputs(): __executeBreakGlassOnCompoundCall__Outputs {
    return new __executeBreakGlassOnCompoundCall__Outputs(this);
  }
}

export class __executeBreakGlassOnCompoundCall__Inputs {
  _call: __executeBreakGlassOnCompoundCall;

  constructor(call: __executeBreakGlassOnCompoundCall) {
    this._call = call;
  }

  get addresses(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }
}

export class __executeBreakGlassOnCompoundCall__Outputs {
  _call: __executeBreakGlassOnCompoundCall;

  constructor(call: __executeBreakGlassOnCompoundCall) {
    this._call = call;
  }
}

export class __executeBreakGlassOnEmissionsManagerCall extends ethereum.Call {
  get inputs(): __executeBreakGlassOnEmissionsManagerCall__Inputs {
    return new __executeBreakGlassOnEmissionsManagerCall__Inputs(this);
  }

  get outputs(): __executeBreakGlassOnEmissionsManagerCall__Outputs {
    return new __executeBreakGlassOnEmissionsManagerCall__Outputs(this);
  }
}

export class __executeBreakGlassOnEmissionsManagerCall__Inputs {
  _call: __executeBreakGlassOnEmissionsManagerCall;

  constructor(call: __executeBreakGlassOnEmissionsManagerCall) {
    this._call = call;
  }

  get addresses(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }
}

export class __executeBreakGlassOnEmissionsManagerCall__Outputs {
  _call: __executeBreakGlassOnEmissionsManagerCall;

  constructor(call: __executeBreakGlassOnEmissionsManagerCall) {
    this._call = call;
  }
}

export class __executeBreakGlassOnOwnableCall extends ethereum.Call {
  get inputs(): __executeBreakGlassOnOwnableCall__Inputs {
    return new __executeBreakGlassOnOwnableCall__Inputs(this);
  }

  get outputs(): __executeBreakGlassOnOwnableCall__Outputs {
    return new __executeBreakGlassOnOwnableCall__Outputs(this);
  }
}

export class __executeBreakGlassOnOwnableCall__Inputs {
  _call: __executeBreakGlassOnOwnableCall;

  constructor(call: __executeBreakGlassOnOwnableCall) {
    this._call = call;
  }

  get addresses(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }
}

export class __executeBreakGlassOnOwnableCall__Outputs {
  _call: __executeBreakGlassOnOwnableCall;

  constructor(call: __executeBreakGlassOnOwnableCall) {
    this._call = call;
  }
}

export class __executeBreakGlassOnSetAdminCall extends ethereum.Call {
  get inputs(): __executeBreakGlassOnSetAdminCall__Inputs {
    return new __executeBreakGlassOnSetAdminCall__Inputs(this);
  }

  get outputs(): __executeBreakGlassOnSetAdminCall__Outputs {
    return new __executeBreakGlassOnSetAdminCall__Outputs(this);
  }
}

export class __executeBreakGlassOnSetAdminCall__Inputs {
  _call: __executeBreakGlassOnSetAdminCall;

  constructor(call: __executeBreakGlassOnSetAdminCall) {
    this._call = call;
  }

  get addresses(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }
}

export class __executeBreakGlassOnSetAdminCall__Outputs {
  _call: __executeBreakGlassOnSetAdminCall;

  constructor(call: __executeBreakGlassOnSetAdminCall) {
    this._call = call;
  }
}

export class __executeBreakGlassOnSetPendingAdminCall extends ethereum.Call {
  get inputs(): __executeBreakGlassOnSetPendingAdminCall__Inputs {
    return new __executeBreakGlassOnSetPendingAdminCall__Inputs(this);
  }

  get outputs(): __executeBreakGlassOnSetPendingAdminCall__Outputs {
    return new __executeBreakGlassOnSetPendingAdminCall__Outputs(this);
  }
}

export class __executeBreakGlassOnSetPendingAdminCall__Inputs {
  _call: __executeBreakGlassOnSetPendingAdminCall;

  constructor(call: __executeBreakGlassOnSetPendingAdminCall) {
    this._call = call;
  }

  get addresses(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }
}

export class __executeBreakGlassOnSetPendingAdminCall__Outputs {
  _call: __executeBreakGlassOnSetPendingAdminCall;

  constructor(call: __executeBreakGlassOnSetPendingAdminCall) {
    this._call = call;
  }
}

export class __executeCompoundAcceptAdminOnContractCall extends ethereum.Call {
  get inputs(): __executeCompoundAcceptAdminOnContractCall__Inputs {
    return new __executeCompoundAcceptAdminOnContractCall__Inputs(this);
  }

  get outputs(): __executeCompoundAcceptAdminOnContractCall__Outputs {
    return new __executeCompoundAcceptAdminOnContractCall__Outputs(this);
  }
}

export class __executeCompoundAcceptAdminOnContractCall__Inputs {
  _call: __executeCompoundAcceptAdminOnContractCall;

  constructor(call: __executeCompoundAcceptAdminOnContractCall) {
    this._call = call;
  }

  get addresses(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }
}

export class __executeCompoundAcceptAdminOnContractCall__Outputs {
  _call: __executeCompoundAcceptAdminOnContractCall;

  constructor(call: __executeCompoundAcceptAdminOnContractCall) {
    this._call = call;
  }
}

export class __removeGuardiansCall extends ethereum.Call {
  get inputs(): __removeGuardiansCall__Inputs {
    return new __removeGuardiansCall__Inputs(this);
  }

  get outputs(): __removeGuardiansCall__Outputs {
    return new __removeGuardiansCall__Outputs(this);
  }
}

export class __removeGuardiansCall__Inputs {
  _call: __removeGuardiansCall;

  constructor(call: __removeGuardiansCall) {
    this._call = call;
  }
}

export class __removeGuardiansCall__Outputs {
  _call: __removeGuardiansCall;

  constructor(call: __removeGuardiansCall) {
    this._call = call;
  }
}

export class __setGovernanceReturnAddressCall extends ethereum.Call {
  get inputs(): __setGovernanceReturnAddressCall__Inputs {
    return new __setGovernanceReturnAddressCall__Inputs(this);
  }

  get outputs(): __setGovernanceReturnAddressCall__Outputs {
    return new __setGovernanceReturnAddressCall__Outputs(this);
  }
}

export class __setGovernanceReturnAddressCall__Inputs {
  _call: __setGovernanceReturnAddressCall;

  constructor(call: __setGovernanceReturnAddressCall) {
    this._call = call;
  }

  get governanceReturnAddress_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class __setGovernanceReturnAddressCall__Outputs {
  _call: __setGovernanceReturnAddressCall;

  constructor(call: __setGovernanceReturnAddressCall) {
    this._call = call;
  }
}

export class CancelCall extends ethereum.Call {
  get inputs(): CancelCall__Inputs {
    return new CancelCall__Inputs(this);
  }

  get outputs(): CancelCall__Outputs {
    return new CancelCall__Outputs(this);
  }
}

export class CancelCall__Inputs {
  _call: CancelCall;

  constructor(call: CancelCall) {
    this._call = call;
  }

  get proposalId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class CancelCall__Outputs {
  _call: CancelCall;

  constructor(call: CancelCall) {
    this._call = call;
  }
}

export class CastVoteCall extends ethereum.Call {
  get inputs(): CastVoteCall__Inputs {
    return new CastVoteCall__Inputs(this);
  }

  get outputs(): CastVoteCall__Outputs {
    return new CastVoteCall__Outputs(this);
  }
}

export class CastVoteCall__Inputs {
  _call: CastVoteCall;

  constructor(call: CastVoteCall) {
    this._call = call;
  }

  get proposalId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get voteValue(): i32 {
    return this._call.inputValues[1].value.toI32();
  }
}

export class CastVoteCall__Outputs {
  _call: CastVoteCall;

  constructor(call: CastVoteCall) {
    this._call = call;
  }
}

export class CastVoteBySigCall extends ethereum.Call {
  get inputs(): CastVoteBySigCall__Inputs {
    return new CastVoteBySigCall__Inputs(this);
  }

  get outputs(): CastVoteBySigCall__Outputs {
    return new CastVoteBySigCall__Outputs(this);
  }
}

export class CastVoteBySigCall__Inputs {
  _call: CastVoteBySigCall;

  constructor(call: CastVoteBySigCall) {
    this._call = call;
  }

  get proposalId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get voteValue(): i32 {
    return this._call.inputValues[1].value.toI32();
  }

  get v(): i32 {
    return this._call.inputValues[2].value.toI32();
  }

  get r(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }

  get s(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }
}

export class CastVoteBySigCall__Outputs {
  _call: CastVoteBySigCall;

  constructor(call: CastVoteBySigCall) {
    this._call = call;
  }
}

export class ExecuteCall extends ethereum.Call {
  get inputs(): ExecuteCall__Inputs {
    return new ExecuteCall__Inputs(this);
  }

  get outputs(): ExecuteCall__Outputs {
    return new ExecuteCall__Outputs(this);
  }
}

export class ExecuteCall__Inputs {
  _call: ExecuteCall;

  constructor(call: ExecuteCall) {
    this._call = call;
  }

  get proposalId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ExecuteCall__Outputs {
  _call: ExecuteCall;

  constructor(call: ExecuteCall) {
    this._call = call;
  }
}

export class ProposeCall extends ethereum.Call {
  get inputs(): ProposeCall__Inputs {
    return new ProposeCall__Inputs(this);
  }

  get outputs(): ProposeCall__Outputs {
    return new ProposeCall__Outputs(this);
  }
}

export class ProposeCall__Inputs {
  _call: ProposeCall;

  constructor(call: ProposeCall) {
    this._call = call;
  }

  get targets(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }

  get values(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }

  get signatures(): Array<string> {
    return this._call.inputValues[2].value.toStringArray();
  }

  get calldatas(): Array<Bytes> {
    return this._call.inputValues[3].value.toBytesArray();
  }

  get description(): string {
    return this._call.inputValues[4].value.toString();
  }

  get fastTrack(): boolean {
    return this._call.inputValues[5].value.toBoolean();
  }
}

export class ProposeCall__Outputs {
  _call: ProposeCall;

  constructor(call: ProposeCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class QueueCall extends ethereum.Call {
  get inputs(): QueueCall__Inputs {
    return new QueueCall__Inputs(this);
  }

  get outputs(): QueueCall__Outputs {
    return new QueueCall__Outputs(this);
  }
}

export class QueueCall__Inputs {
  _call: QueueCall;

  constructor(call: QueueCall) {
    this._call = call;
  }

  get proposalId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class QueueCall__Outputs {
  _call: QueueCall;

  constructor(call: QueueCall) {
    this._call = call;
  }
}

export class SetBreakGlassGuardianCall extends ethereum.Call {
  get inputs(): SetBreakGlassGuardianCall__Inputs {
    return new SetBreakGlassGuardianCall__Inputs(this);
  }

  get outputs(): SetBreakGlassGuardianCall__Outputs {
    return new SetBreakGlassGuardianCall__Outputs(this);
  }
}

export class SetBreakGlassGuardianCall__Inputs {
  _call: SetBreakGlassGuardianCall;

  constructor(call: SetBreakGlassGuardianCall) {
    this._call = call;
  }

  get newGuardian(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetBreakGlassGuardianCall__Outputs {
  _call: SetBreakGlassGuardianCall;

  constructor(call: SetBreakGlassGuardianCall) {
    this._call = call;
  }
}

export class SetProposalMaxOperationsCall extends ethereum.Call {
  get inputs(): SetProposalMaxOperationsCall__Inputs {
    return new SetProposalMaxOperationsCall__Inputs(this);
  }

  get outputs(): SetProposalMaxOperationsCall__Outputs {
    return new SetProposalMaxOperationsCall__Outputs(this);
  }
}

export class SetProposalMaxOperationsCall__Inputs {
  _call: SetProposalMaxOperationsCall;

  constructor(call: SetProposalMaxOperationsCall) {
    this._call = call;
  }

  get newValue(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetProposalMaxOperationsCall__Outputs {
  _call: SetProposalMaxOperationsCall;

  constructor(call: SetProposalMaxOperationsCall) {
    this._call = call;
  }
}

export class SetProposalThresholdCall extends ethereum.Call {
  get inputs(): SetProposalThresholdCall__Inputs {
    return new SetProposalThresholdCall__Inputs(this);
  }

  get outputs(): SetProposalThresholdCall__Outputs {
    return new SetProposalThresholdCall__Outputs(this);
  }
}

export class SetProposalThresholdCall__Inputs {
  _call: SetProposalThresholdCall;

  constructor(call: SetProposalThresholdCall) {
    this._call = call;
  }

  get newValue(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetProposalThresholdCall__Outputs {
  _call: SetProposalThresholdCall;

  constructor(call: SetProposalThresholdCall) {
    this._call = call;
  }
}

export class SetVotingDelayCall extends ethereum.Call {
  get inputs(): SetVotingDelayCall__Inputs {
    return new SetVotingDelayCall__Inputs(this);
  }

  get outputs(): SetVotingDelayCall__Outputs {
    return new SetVotingDelayCall__Outputs(this);
  }
}

export class SetVotingDelayCall__Inputs {
  _call: SetVotingDelayCall;

  constructor(call: SetVotingDelayCall) {
    this._call = call;
  }

  get newValue(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetVotingDelayCall__Outputs {
  _call: SetVotingDelayCall;

  constructor(call: SetVotingDelayCall) {
    this._call = call;
  }
}

export class SweepTokensCall extends ethereum.Call {
  get inputs(): SweepTokensCall__Inputs {
    return new SweepTokensCall__Inputs(this);
  }

  get outputs(): SweepTokensCall__Outputs {
    return new SweepTokensCall__Outputs(this);
  }
}

export class SweepTokensCall__Inputs {
  _call: SweepTokensCall;

  constructor(call: SweepTokensCall) {
    this._call = call;
  }

  get tokenAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get destinationAddress(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class SweepTokensCall__Outputs {
  _call: SweepTokensCall;

  constructor(call: SweepTokensCall) {
    this._call = call;
  }
}
